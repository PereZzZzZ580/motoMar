generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Usuario {
  id                          String          @id @default(cuid())
  email                       String          @unique
  telefono                    String?         @unique
  password                    String
  nombre                      String
  apellido                    String
  cedula                      String?         @unique
  fechaNacimiento             DateTime?
  avatar                      String?
  emailVerificado             Boolean         @default(false)
  telefonoVerificado          Boolean         @default(false)
  cedulaVerificada            Boolean         @default(false)
  ciudad                      String?
  departamento                String?
  direccion                   String?
  calificacion                Float           @default(0.0)
  totalVentas                 Int             @default(0)
  totalCompras                Int             @default(0)
  activo                      Boolean         @default(true)
  ultimoAcceso                DateTime?
  createdAt                   DateTime        @default(now())
  updatedAt                   DateTime        @updatedAt
  calificacionesRecibidas     Calificacion[]  @relation("CalificadoUsuario")
  calificacionesHechas        Calificacion[]  @relation("CalificadorUsuario")
  conversacionesInicializadas Conversacion[]  @relation("UsuarioIniciador")
  conversacionesRecibidas     Conversacion[]  @relation("UsuarioReceptor")
  favoritosMoto               FavoritoMoto[]
  mensajesRecibidos           Mensaje[]       @relation("MensajesRecibidos")
  mensajesEnviados            Mensaje[]       @relation("MensajesEnviados")
  motosPublicadas             Moto[]          @relation("VendedorMotos")
  reportes                    Reporte[]
  sesiones                    SesionUsuario[]
  transaccionesComprador      Transaccion[]   @relation("CompradorTransacciones")
  transaccionesVendedor       Transaccion[]   @relation("VendedorTransacciones")

  @@map("usuarios")
}

model SesionUsuario {
  id        String   @id @default(cuid())
  token     String   @unique
  usuarioId String
  activa    Boolean  @default(true)
  ipAddress String?
  userAgent String?
  createdAt DateTime @default(now())
  expiresAt DateTime
  usuario   Usuario  @relation(fields: [usuarioId], references: [id], onDelete: Cascade)

  @@map("sesiones_usuario")
}

model Moto {
  id              String          @id @default(cuid())
  titulo          String
  descripcion     String
  precio          Decimal         @db.Decimal(12, 2)
  negociable      Boolean         @default(true)
  marca           String
  modelo          String
  a√±o            Int
  cilindraje      Int
  kilometraje     Int
  color           String
  combustible     TipoCombustible @default(GASOLINA)
  transmision     TipoTransmision @default(MANUAL)
  estado          EstadoMoto      @default(USADO)
  condicion       CondicionMoto   @default(BUENA)
  soatVigente     Boolean         @default(false)
  tecnoVigente    Boolean         @default(false)
  papalesAlDia    Boolean         @default(false)
  frenos          TipoFreno?
  llantas         EstadoLlantas?
  mantenimiento   String?
  accesorios      String?
  ciudad          String
  departamento    String
  barrio          String?
  imagenPrincipal String?
  activa          Boolean         @default(true)
  vendida         Boolean         @default(false)
  destacada       Boolean         @default(false)
  views           Int             @default(0)
  createdAt       DateTime        @default(now())
  updatedAt       DateTime        @updatedAt
  vendedorId      String
  conversaciones  Conversacion[]
  favoritos       FavoritoMoto[]
  imagenes        ImagenMoto[]
  vendedor        Usuario         @relation("VendedorMotos", fields: [vendedorId], references: [id], onDelete: Cascade)
  reportes        Reporte[]
  transacciones   Transaccion[]

  @@map("motos")
}

model ImagenMoto {
  id        String   @id @default(cuid())
  url       String
  alt       String?
  orden     Int      @default(0)
  motoId    String
  createdAt DateTime @default(now())
  moto      Moto     @relation(fields: [motoId], references: [id], onDelete: Cascade)

  @@map("imagenes_moto")
}

model Transaccion {
  id                String            @id @default(cuid())
  codigo            String            @unique
  vendedorId        String
  compradorId       String
  motoId            String
  precioFinal       Decimal           @db.Decimal(12, 2)
  comisionApp       Decimal           @db.Decimal(8, 2)
  comisionPago      Decimal           @db.Decimal(8, 2)
  estado            EstadoTransaccion @default(PENDIENTE)
  fechaAcuerdo      DateTime?
  fechaPago         DateTime?
  fechaEntrega      DateTime?
  fechaTraspaso     DateTime?
  fechaFinalizacion DateTime?
  metodoPago        MetodoPago?
  referenciaGateway String?
  lugarEncuentro    String?
  coordenadasLat    Float?
  coordenadasLng    Float?
  costoTraspaso     Decimal?          @db.Decimal(8, 2)
  createdAt         DateTime          @default(now())
  updatedAt         DateTime          @updatedAt
  calificaciones    Calificacion[]
  conversacion      Conversacion?
  pagos             Pago[]
  tramiteRunt       TramiteRunt?
  comprador         Usuario           @relation("CompradorTransacciones", fields: [compradorId], references: [id])
  moto              Moto              @relation(fields: [motoId], references: [id])
  vendedor          Usuario           @relation("VendedorTransacciones", fields: [vendedorId], references: [id])

  @@map("transacciones")
}

model Pago {
  id                String      @id @default(cuid())
  transaccionId     String
  monto             Decimal     @db.Decimal(12, 2)
  metodoPago        MetodoPago
  estado            EstadoPago  @default(PENDIENTE)
  gatewayId         String?
  referenciaExterna String?
  createdAt         DateTime    @default(now())
  procesadoAt       DateTime?
  transaccion       Transaccion @relation(fields: [transaccionId], references: [id])

  @@map("pagos")
}

model TramiteRunt {
  id               String        @id @default(cuid())
  transaccionId    String        @unique
  estado           EstadoTramite @default(PENDIENTE)
  fechaCita        DateTime?
  lugarCita        String?
  formularioLleno  Boolean       @default(false)
  improntasTomadas Boolean       @default(false)
  pagosRealizados  Boolean       @default(false)
  createdAt        DateTime      @default(now())
  completadoAt     DateTime?
  transaccion      Transaccion   @relation(fields: [transaccionId], references: [id])

  @@map("tramites_runt")
}

model Conversacion {
  id                 String       @id @default(cuid())
  usuarioIniciadorId String
  usuarioReceptorId  String
  motoId             String
  transaccionId      String?      @unique
  activa             Boolean      @default(true)
  bloqueada          Boolean      @default(false)
  ultimoMensajeAt    DateTime?
  createdAt          DateTime     @default(now())
  updatedAt          DateTime     @updatedAt
  moto               Moto         @relation(fields: [motoId], references: [id])
  transaccion        Transaccion? @relation(fields: [transaccionId], references: [id])
  usuarioIniciador   Usuario      @relation("UsuarioIniciador", fields: [usuarioIniciadorId], references: [id])
  usuarioReceptor    Usuario      @relation("UsuarioReceptor", fields: [usuarioReceptorId], references: [id])
  mensajes           Mensaje[]
  ofertas            Oferta[]

  @@unique([usuarioIniciadorId, usuarioReceptorId, motoId])
  @@map("conversaciones")
}

model Mensaje {
  id             String       @id @default(cuid())
  contenido      String
  tipo           TipoMensaje  @default(TEXTO)
  remitenteId    String
  destinatarioId String
  conversacionId String
  leido          Boolean      @default(false)
  fechaLectura   DateTime?
  archivoUrl     String?
  archivoTipo    String?
  createdAt      DateTime     @default(now())
  conversacion   Conversacion @relation(fields: [conversacionId], references: [id], onDelete: Cascade)
  destinatario   Usuario      @relation("MensajesRecibidos", fields: [destinatarioId], references: [id])
  remitente      Usuario      @relation("MensajesEnviados", fields: [remitenteId], references: [id])

  @@map("mensajes")
}

model Oferta {
  id             String       @id @default(cuid())
  monto          Decimal      @db.Decimal(12, 2)
  mensaje        String?
  estado         EstadoOferta @default(PENDIENTE)
  conversacionId String
  validaHasta    DateTime?
  createdAt      DateTime     @default(now())
  respondidaAt   DateTime?
  conversacion   Conversacion @relation(fields: [conversacionId], references: [id], onDelete: Cascade)

  @@map("ofertas")
}

model Calificacion {
  id            String           @id @default(cuid())
  puntuacion    Int
  comentario    String?
  tipo          TipoCalificacion
  calificadorId String
  calificadoId  String
  transaccionId String
  createdAt     DateTime         @default(now())
  calificado    Usuario          @relation("CalificadoUsuario", fields: [calificadoId], references: [id])
  calificador   Usuario          @relation("CalificadorUsuario", fields: [calificadorId], references: [id])
  transaccion   Transaccion      @relation(fields: [transaccionId], references: [id])

  @@unique([calificadorId, transaccionId])
  @@map("calificaciones")
}

model FavoritoMoto {
  id        String   @id @default(cuid())
  usuarioId String
  motoId    String
  createdAt DateTime @default(now())
  moto      Moto     @relation(fields: [motoId], references: [id], onDelete: Cascade)
  usuario   Usuario  @relation(fields: [usuarioId], references: [id], onDelete: Cascade)

  @@unique([usuarioId, motoId])
  @@map("favoritos_moto")
}

model Reporte {
  id           String        @id @default(cuid())
  tipo         TipoReporte
  motivo       String
  descripcion  String?
  estado       EstadoReporte @default(PENDIENTE)
  reportanteId String
  motoId       String?
  createdAt    DateTime      @default(now())
  resolvidoAt  DateTime?
  moto         Moto?         @relation(fields: [motoId], references: [id])
  reportante   Usuario       @relation(fields: [reportanteId], references: [id])

  @@map("reportes")
}

enum TipoCombustible {
  Gasolina
  ELECTRICA
  HIBRIDA
}

enum TipoTransmision {
  MANUAL
  AUTOMATICA
  SEMI_AUTOMATICA
}

enum EstadoMoto {
  NUEVA
  USADO
  PARA_REPUESTOS
}

enum CondicionMoto {
  EXCELENTE
  MUY_BUENA
  BUENA
  REGULAR
  NECESITA_REPARACION
}

enum TipoFreno {
  DISCO
  TAMBOR
  MIXTO
  ABS
  CBS
}

enum EstadoLlantas {
  NUEVAS
  BUENAS
  REGULARES
  NECESITAN_CAMBIO
}

enum EstadoTransaccion {
  PENDIENTE
  PAGO_PENDIENTE
  PAGO_CONFIRMADO
  ENTREGADA
  TRASPASO_PENDIENTE
  FINALIZADA
  CANCELADA
  DISPUTADA
}

enum MetodoPago {
  PSE
  TARJETA_CREDITO
  TARJETA_DEBITO
  TRANSFERENCIA
  EFECTIVO
  FINANCIACION
}

enum EstadoPago {
  PENDIENTE
  PROCESANDO
  APROBADO
  RECHAZADO
  REEMBOLSADO
}

enum EstadoTramite {
  PENDIENTE
  CITA_AGENDADA
  EN_PROCESO
  COMPLETADO
  FALLIDO
}

enum TipoMensaje {
  TEXTO
  IMAGEN
  ARCHIVO
  UBICACION
  OFERTA
  SISTEMA
}

enum EstadoOferta {
  PENDIENTE
  ACEPTADA
  RECHAZADA
  EXPIRADA
}

enum TipoCalificacion {
  COMO_VENDEDOR
  COMO_COMPRADOR
}

enum TipoReporte {
  MOTO_SOSPECHOSA
  USUARIO_SOSPECHOSO
  CONTENIDO_INAPROPIADO
  ESTAFA
  SPAM
  OTRO
}

enum EstadoReporte {
  PENDIENTE
  EN_REVISION
  RESUELTO
  DESESTIMADO
}
